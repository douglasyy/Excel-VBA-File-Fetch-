Option Explicit

' Declare module-level variables
Dim ol As Outlook.Application
Dim ns As Outlook.Namespace
Dim mainFolder As Outlook.Folder
Dim fiscalYearStartMonth As Integer
Dim saveFolder As String
Dim fiscalYearFolder As String
Dim monthFolder As String
Dim dropFolder As String
Dim fiscalMonthNumber As Integer
Dim H_SaveFolder As String
Dim ws As Worksheet
Dim startDate As Date
Dim endDate As Date
Dim firstDayofMonth As Date
Dim currentRow As Integer
Dim titleCol As Integer
Dim namesCol As Integer
Dim fileCountCol As Integer
Dim today As Date
Dim dtFirstBusinessDay As Date
Dim previousMonth As Date

Sub InitializeVariables()
    fiscalYearStartMonth = 11 ' November

    ' Specify the folder we want to save the attachment files
    saveFolder = "\\Wmmcc-fn-00002b.ad.cibc.com\dcm_ds_gcm\LIQUIDTY\LIQUIDITY MANAGEMENT GROUP\Production Report\FR2052a\"
    today = Date

    ' Calculate the timestamp for the previous month
    previousMonth = DateAdd("m", -1, today)
    
    ' Determine fiscal year
    If Month(previousMonth) >= fiscalYearStartMonth Then
        fiscalYearFolder = "FY" & Right(Year(today) + 1, 2) & "\"
        fiscalMonthNumber = (Month(previousMonth) - fiscalYearStartMonth) Mod 12 + 1
    Else
        fiscalYearFolder = "FY" & Right(Year(today), 2) & "\"
        fiscalMonthNumber = (Month(previousMonth) - fiscalYearStartMonth + 12) Mod 12 + 1
    End If
    
    ' Define the folder name for the previous month
    monthFolder = fiscalMonthNumber & ". FR2052a_" & Format(previousMonth, "mmmm yy") & "\"
    dropFolder = saveFolder & fiscalYearFolder & monthFolder & "CIBC Bank USA\" & "Files from Chicago\"
    
    If Dir(dropFolder, vbDirectory) = "" Then
        MkDir dropFolder
    End If
    
    ' Another Place for US Automation Purpose
    H_SaveFolder = "H:\FR 2052a\2052a Controls\US MA Automation\Input Files\Auto Drop\"

    ' Initialize the Outlook Items for development
    Set ol = New Outlook.Application
    Set ns = ol.GetNamespace("MAPI")
    Set mainFolder = ns.GetDefaultFolder(olFolderInbox)
    
    ' Initialize the worksheet
    Set ws = ThisWorkbook.Sheets("Files Drop VBA")
    
    ' Calculate startDate and endDate
    startDate = DateSerial(Year(Date), Month(Date), 1)
    endDate = Date

    ' Calculate the first day and first business day of the month
    firstDayofMonth = DateSerial(Year(Date), Month(Date), 1)
    dtFirstBusinessDay = firstDayofMonth
    
    Select Case Weekday(dtFirstBusinessDay)
        Case vbSaturday
            dtFirstBusinessDay = dtFirstBusinessDay + 2
        Case vbSunday
            dtFirstBusinessDay = dtFirstBusinessDay + 1
    End Select

    ' Define the layout of the worksheet
    currentRow = 1 ' This shall be an incremental value for each file drop function
    titleCol = 2
    namesCol = 9
    fileCountCol = 7
End Sub

Sub SaveFile_Monthly_Treasury_1()
    Dim fol As Outlook.Folder
    Dim SubFolder As Outlook.MAPIFolder
    Dim mi As Outlook.MailItem
    Dim fso As Object
    Dim attachmentCount As Integer
    Dim saveName As String
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim Atmt As Outlook.Attachment
    Dim startTime As Date
    Dim endTime As Date
    Dim processTime As Double
    Dim mitems As Outlook.Items

    Set wb = ThisWorkbook
    Set ws = wb.Sheets("Files Drop VBA")

    ' !! Declare the row number to read in
    currentRow = 2
   
    startTime = Now
    
    ' Initialize startDate and endDate
    startDate = DateSerial(Year(today), Month(today), 1)
    endDate = today
    
    ' Set the SubFolder
    Set SubFolder = mainFolder.Folders("2052a MA related")
    Set mitems = SubFolder.Items
    mitems.Sort "ReceivedTime", True
    
    previousMonth = DateAdd("m", -1, today)
    attachmentCount = 0

    ' Loop through the emails
    For Each mi In mitems
        ' Only check the emails received on the first day
        If DateValue(mi.ReceivedTime) = firstDayofMonth Or DateValue(mi.ReceivedTime) = dtFirstBusinessDay Then
            ' Check the subject of the email
            If mi.Subject = ws.Cells(currentRow, titleCol) & " - " & Format(previousMonth, "mmmm yyyy") Then
                ' Loop through attachments
                For Each Atmt In mi.Attachments
                    If Right(Atmt.Filename, 4) = ".xls" Or Right(Atmt.Filename, 5) = ".xlsx" Or Right(Atmt.Filename, 4) = ".pdf" Then
                        On Error Resume Next
                        ws.Cells(currentRow, namesCol).Value = Atmt.Filename
                        attachmentCount = attachmentCount + 1
                        namesCol = namesCol + 1
                        If Err.Number <> 0 Then
                            MsgBox "Error: " & Err.Description
                        End If

                        ' File name problem
                        If InStr(1, Atmt.Filename, "TPGP", vbTextCompare) > 0 Then
                            ' Save the attachment with a specific name
                            saveName = "TPGP - FV.xlsx"
                        Else
                            ' Save the attachment with its original name
                            saveName = Atmt.Filename
                        End If
                        
                        Atmt.SaveAsFile dropFolder & Atmt.Filename
                        Atmt.SaveAsFile H_SaveFolder & saveName
                    End If
                Next Atmt
                
                ws.Cells(currentRow, fileCountCol).Value = attachmentCount
                Exit For ' Exit early once the qualified email is found
            End If
        End If
    Next mi
            
    endTime = Now
    processTime = DateDiff("s", startTime, endTime)
    
    MsgBox "Done, Process time: " & processTime & " seconds"
      
    ' Clean up
    Set Atmt = Nothing
    Set mi = Nothing
    Set SubFolder = Nothing
    Set ns = Nothing
    Set ol = Nothing
    Set ws = Nothing
    Set wb = Nothing
End Sub
